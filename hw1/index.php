<?php
    //Задание 5. Поскольку $x статическая переменная, то она будет проинициализирована только при первом вызове функции.
    //Не будет обнуляться каждый раз.
    /* class A {
        public function foo() {
            static $x = 0;
            echo ++$x;
        }
    }
    $a1 = new A();
    $a2 = new A();
    $a1->foo();
    $a2->foo();
    $a1->foo();
    $a2->foo(); */

    //Задание 6.
    /* При вызове функции foo() статическая переменная инициализирутеся у разных классов. Хоть класс B и является наследником
    A, но статические переменные у них не зависят друг от друга*/ 
    /* class A {
        public function foo() {
            static $x = 0;
            echo ++$x;
        }
    }
    class B extends A {
    }
    $a1 = new A();
    $b1 = new B();    
    $a1->foo(); 
    $b1->foo(); 
    $a1->foo(); 
    $b1->foo(); */

    //Задание 7
    //Хоть здесь и нет скобок при создании объекта определённого класса, это не имеет значения.
    //Здесь пустая функция-конструктор. В скобочки мы передаём параметры именно для неё.
    class A {
        public function foo() {
            static $x = 0;
            echo ++$x;
        }
    }
    class B extends A {
    }
    $a1 = new A;
    $b1 = new B;
    $a1->foo(); 
    $b1->foo(); 
    $a1->foo(); 
    $b1->foo(); 